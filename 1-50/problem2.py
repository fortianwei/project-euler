#coding=utf-8
'''
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

'''
def fn(x):
    return int(1/5**0.5*(((1+5**0.5)/2)**(x+2) - ((1-5**0.5)/2)**(x+2)))

for i in xrange(10):
    print fn(i)

x = [1, 2]

def fn2(x):
    if x == 1:
        return 1
    elif x == 2:
        return 2
    else:
        return fn2(x-2) + fn2(x-1)

from itertools import count
total = 0
for i in count(1):
    temp = fn(i)
    if temp > 4000000:
        break
    if temp % 2 ==0:
        total += temp
print total


'''
斐波那契数列：0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...

F(n)=(1/√5)*{[(1+√5)/2]^n - [(1-√5)/2]^n}【√5表示根号5】
'''